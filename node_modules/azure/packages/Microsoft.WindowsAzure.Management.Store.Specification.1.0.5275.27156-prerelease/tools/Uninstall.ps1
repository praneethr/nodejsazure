# This file is used when the generated package is uninstalled
# It removes the copy target that was added in install.ps1
# so that the packages update cleanly.
param($installPath, $toolsPath, $package, $project)
    # Need to load MSBuild assembly if it's not loaded yet.
    Add-Type -AssemblyName 'Microsoft.Build, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'

    # Grab the loaded MSBuild project for the project
    $msbuild = [Microsoft.Build.Evaluation.ProjectCollection]::GlobalProjectCollection.GetLoadedProjects($project.FullName) | Select-Object -First 1

    # Find all the imports and targets added by this package.
    $itemsToRemove = @()

    # Find the spec dll - it's the only one in the tools folder
    $specDllPath = Get-ChildItem $toolsPath *.dll | Select-Object -First 1

    # Form name of the copy target
    $targetName = 'Copy' + $specDllPath.BaseName.Replace('.', '')

    # Allow many in case a past package was incorrectly uninstalled
    $itemsToRemove += $msbuild.Xml.Targets | Where-Object { $_.Name -eq $targetName }

    # Remove the elements and save the project
    if ($itemsToRemove -and $itemsToRemove.length)
    {
        foreach ($itemToRemove in $itemsToRemove)
        {
            $msbuild.Xml.RemoveChild($itemToRemove) | out-null
        }

        $project.Save()
    }
