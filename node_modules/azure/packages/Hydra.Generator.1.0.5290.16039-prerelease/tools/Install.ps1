param($installPath, $toolsPath, $package, $project)
    # This is the MSBuild targets file to add
    $buildPath = [System.IO.Path]::Combine($installPath, 'build')
    $targetsFile = [System.IO.Path]::Combine($buildPath, $package.Id + '.targets')

    # Need to load MSBuild assembly if it's not loaded yet.
    Add-Type -AssemblyName 'Microsoft.Build, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'

    # Grab the loaded MSBuild project for the project
    $msbuild = [Microsoft.Build.Evaluation.ProjectCollection]::GlobalProjectCollection.GetLoadedProjects($project.FullName) | Select-Object -First 1

    # Add import of GenerateCode.props. Must be done before the targets file that was automatically loaded
    $targetsImport = $msbuild.Xml.Imports | Where-Object { $_.Project.EndsWith($package.Id + '.targets') } | Select-Object -First 1
    $msbuild.Xml.InsertBeforeChild($msbuild.Xml.CreateImportElement('GenerateCode.props'), $targetsImport)

    # # Make the path to the targets file relative.
    $projectUri = new-object Uri($project.FullName, [System.UriKind]::Absolute)
    $targetUri = new-object Uri($targetsFile, [System.UriKind]::Absolute)
    $relativePath = [System.Uri]::UnescapeDataString($projectUri.MakeRelativeUri($targetUri).ToString()).Replace([System.IO.Path]::AltDirectorySeparatorChar, [System.IO.Path]::DirectorySeparatorChar)

    # Add target to run the code generation
    $target = $msbuild.Xml.AddTarget('DoSpecGeneration')
    $target.DependsOnTargets = 'RestorePackages'
    $target.BeforeTargets = 'BeforeBuild'

    $callTask = $target.AddTask('CallTarget')
    $callTask.SetParameter('Targets', 'GenerateCodeFromSpecs')
    $callTask.Condition="'`$(HydraGeneratorImported)' != ''"

    $errorTask = $target.AddTask('Error')
    $errorTask.SetParameter('Text', 'The Hydra code generator package was restored from nuget. Build the project again to do code generation.')
    $errorTask.Condition = "Exists('$relativePath') And '`$(HydraGeneratorImported)' == ''"

    $warnTask = $target.AddTask('Warning')
    $warnTask.SetParameter('Text', 'The Hydra code generation packages are not available. Compilation will be done on existing generated sources.')
    $warnTask.Condition = "!Exists('$relativePath')"

    $project.Save()
